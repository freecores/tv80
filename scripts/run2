#!/usr/bin/env python
# Copyright (c) 2004 Guy Hutchison (ghutchis@opencores.org)
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import sys, os, getopt

def print_help ():
    print "Usage: run [-dh] <testname>"
    print "  -d : instruction decode"
    print "  -h : option help (this list)"
    sys.exit(0)

# parse command line options
# d : instruction trace
# h : help
(options, args) = getopt.getopt (sys.argv[1:], "dh")
if len(args) == 0:
    print_help()
testname = args[0]
simulator = "cver"

filelist = " -f env/tb.vf"
testdef  = " +incdir+env -l logs/%s.log +define+DUMPFILE_NAME=\\\"logs/%s.dump\\\" +define+ROM_FILE=\\\"tests/%s.vmem\\\" +define+RAM_FILE=\\\"tests/%s.vmem\\\"" % (testname, testname, testname+"_rom", testname+"_ram")

for option in options:
    if option[0] == "-d":
        print "Adding TV80_INSTRUCTION_DECODE"
        testdef += " +define+TV80_INSTRUCTION_DECODE=1"
    if option[0] == "-h":
        print_help()

os.chdir ("tests")
os.system ("make %s.vmem" % testname)
os.chdir ("..")

command = simulator + filelist + testdef

print "command:",command
os.system (command)

